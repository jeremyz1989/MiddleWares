######################主数据源，默认的  数据源配置 start ####################
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://ec2-34-224-135-87.compute-1.amazonaws.com:5432/dak2650mvhf08l?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username=u5dgm35oegv2ok
spring.datasource.password=paa9e40fcfbd79f9f937e6937c271a02db581969f1cff699eb114373ae6dde769
######################主数据源， 数据源配置 end ####################

######################更多数据源  数据源配置 start ####################
## custom.datasource.names=ds1,ds2
## custom.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
## custom.datasource.ds1.url=jdbc:mysql://localhost:3306/test1
## custom.datasource.ds1.username=root
## custom.datasource.ds1.password=123456

## custom.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
## custom.datasource.ds2.url=jdbc:mysql://localhost:3306/test2
## custom.datasource.ds2.username=root
## custom.datasource.ds2.password=123456
######################更多数据源  数据源配置 end ####################

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=8
spring.datasource.minIdle=1
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat, wall




server.port=8888

############################### thymeleaf start  ####################
#开启模板缓存（默认值：true）
spring.thymeleaf.cache=true 

#Check that the template exists before rendering it.
spring.thymeleaf.check-template=true 

#检查模板位置是否正确（默认值:true）
spring.thymeleaf.check-template-location=true

#Content-Type的值（默认值：text/html）
spring.thymeleaf.content-type=text/html;charset=UTF-8 

#开启MVC Thymeleaf视图解析（默认值：true）
spring.thymeleaf.enabled=true

#模板编码
spring.thymeleaf.encoding=UTF-8

#要被排除在解析之外的视图名称列表，用逗号分隔
# spring.thymeleaf.excluded-view-names=

#要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
spring.thymeleaf.mode=HTML5

#在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/templates/

#在构建URL时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html

#Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
#spring.thymeleaf.template-resolver-order=

#可解析的视图名称列表，用逗号分隔
# spring.thymeleaf.view-names=
###################### thymeleaf end ########################################

###################### rabbitmq start ########################################
spring.application.name=rabbitmq-mw
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=123456
###################### rabbitmq end ########################################

###################### 日志 start ########################################

###################### 日志 end ########################################